{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7f0aaf59-a00b-4db2-b9da-e0a20922f3d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "_features = \"select( [Time].[Day] * [Version].[Version Name].[CurrentWorkingView] * [Store].[Store_ID].[1] * { Measure.[Temperature], Measure.[Fuel Price], Measure.[MarkDown1] , Measure.[MarkDown2], Measure.[MarkDown3], Measure.[MarkDown4] , Measure.[MarkDown5] , Measure.[CPI] , Measure.[Unemployment] } ) on row, () on column;\"\n",
    "\n",
    "from o9_common_utils.O9DataLake import O9DataLake, ResourceType, DataSource,PluginSetting\n",
    "features = O9DataLake.register(\"features\",DataSource.LS, ResourceType.IBPL, _features,PluginSetting.Inputs)\n",
    "O9DataLake.register(\"Output\",DataSource.LS,ResourceType.IBPL,None,PluginSetting.Outputs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9a9dc06d-c178-4b85-832e-a37a0a0fe6f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#getting inputs from DataLake\n",
    "features = O9DataLake.get('features')\n",
    "#user script\n",
    "import logging\n",
    "Output = None\n",
    "logger = logging.getLogger('o9_logger')\n",
    "logger.info(f'Records count in sales dataframe : {features.shape}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2aff1ba7-fdea-4b5b-b2cf-775d3bfedece",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:o9_sys_logger:{'FileName': 'Fact.Output.csv', 'SheetName': 'Fact.Output.csv', 'TotalRows': 182, 'ProcessedRows': 182, 'Status': 'Success', 'Messages': ['Total Rows: [182]. Successfully Processed Rows: [182].'], 'FileId': 'gcp://MMc4ee9dJS9MHdpILVnSjpoFvO0UQ6hlngU90WVB6tPH_tmev97EN0bgRuFY1JHMpBa0F5t7fqeccQlFBcuZzTSPgaCf7GSwjLPCftaWjqY1'}\n"
     ]
    }
   ],
   "source": [
    "O9DataLake.put(\"Output\", features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e78008d9-842a-4a7d-85bf-57585bfa9f80",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "[KaggleWalmartTest] Tenant Conda Environment",
   "language": "python",
   "name": "qarelease_kagglewalmarttest_srishti.singh"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
